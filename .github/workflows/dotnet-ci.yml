# .github/workflows/dotnet-ci.yml
# Run NUnit tests found in the UnitTests folder on push and pull_request.
# Matrix runs across Windows and Linux and across multiple .NET SDK versions.
name: .NET CI (UnitTests)

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

concurrency:
  group: dotnet-ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  test:
    name: Test: ${{ matrix.os }} / .NET ${{ matrix.dotnet-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        dotnet-version: ['7.0.x', '6.0.x']

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Cache NuGet packages (Linux / macOS)
        if: runner.os != 'Windows'
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: nuget-${{ matrix.dotnet-version }}-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            nuget-${{ matrix.dotnet-version }}-

      - name: Cache NuGet packages (Windows)
        if: runner.os == 'Windows'
        uses: actions/cache@v4
        with:
          # Typical NuGet cache location for hosted Windows runners
          path: C:\Users\runneradmin\.nuget\packages
          key: nuget-${{ matrix.dotnet-version }}-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            nuget-${{ matrix.dotnet-version }}-

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Run NUnit tests in UnitTests
        run: |
          # Run all test projects under the UnitTests folder.
          # dotnet test will discover NUnit tests in test projects.
          dotnet test UnitTests --no-build --configuration Release --logger "trx;LogFileName=TestResults.trx"

      - name: Upload test results artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}-${{ matrix.dotnet-version }}
          path: |
            UnitTests/TestResults/**/*.trx
            UnitTests/TestResults
