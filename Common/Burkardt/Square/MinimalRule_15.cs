using Burkardt.Types;

namespace Burkardt.Square;

public static partial class MinimalRule
{
    public static double[] smr15()

        //****************************************************************************80
        //
        //  Purpose:
        //
        //    SMR15 returns the SMR rule of degree 15.
        //
        //  Discussion:
        // 
        //    DEGREE: 15
        //    SYMMETRY: (X,Y), (-X,-Y).
        //    POINTS CARDINALITY: 43
        //    NORM INF MOMS. RESIDUAL: 8.88178e-16
        //    SUM NEGATIVE WEIGHTS: 0.00000e+00,
        //
        //  Licensing:
        //
        //    This code is distributed under the GNU LGPL license.
        //
        //  Modified:
        //
        //    21 February 2018
        //
        //  Author:
        //
        //    Original MATLAB version by Mattia Festa, Alvise Sommariva,
        //    C++ version by John Burkardt.
        //
        //  Reference:
        //
        //    Mattia Festa, Alvise Sommariva,
        //    Computing almost minimal formulas on the square,
        //    Journal of Computational and Applied Mathematics,
        //    Volume 17, Number 236, November 2012, pages 4296-4302.
        //
        //  Parameters:
        //
        //    Output, double *SMR15[3*43], the requested rule.
        //
    {
        const int degree = 15;
        double[] xw =
        {
            -9.897035809317545e-01, 5.425907314742811e-01, 2.692004637463620e-02,
            -9.844256804341962e-01, -8.630433434831161e-01, 1.749593663841038e-02,
            -9.720740612950027e-01, -3.529770957215327e-01, 4.407397330060381e-02,
            -9.717518222429252e-01, 9.683214017531246e-01, 9.597984117068133e-03,
            -9.192734438999380e-01, 1.159789159156424e-01, 9.186688636374692e-02,
            -8.920718007989080e-01, 8.096447739678093e-01, 6.009039847791869e-02,
            -8.694522415973330e-01, -9.761961093345928e-01, 2.099677952515304e-02,
            -8.685236892209494e-01, -6.756459657106383e-01, 7.822899155683208e-02,
            -7.630389610522654e-01, -4.519651830370793e-01, 4.323794116684067e-02,
            -7.606746138826611e-01, 4.797962173343035e-01, 1.341465202538838e-01,
            -7.151716310198851e-01, -1.863833474025069e-01, 1.456054555637575e-01,
            -6.987339962580051e-01, 9.595571077523438e-01, 4.226674647754744e-02,
            -6.348443155921265e-01, -8.760006464754001e-01, 8.606581576391330e-02,
            -5.034250302130044e-01, 7.544476347964910e-01, 1.336407358940195e-01,
            -4.795655397342558e-01, 1.795809740683987e-01, 2.029010677239986e-01,
            -4.639944974152491e-01, -5.789694673013793e-01, 1.560859171904400e-01,
            -3.244129251598891e-01, -9.815797807964038e-01, 3.669707979316125e-02,
            -2.413326601845606e-01, -2.562094364546668e-01, 1.805943476814126e-01,
            -2.289847857525782e-01, 9.462454193863400e-01, 7.000525056015877e-02,
            -1.648117901013778e-01, 5.076930665870906e-01, 2.008843851797360e-01,
            -1.220776156497820e-01, -8.000225811280368e-01, 1.383276061021405e-01,
            0.000000000000000e+00, 0.000000000000000e+00, 1.605402685892418e-01,
            1.220776156497820e-01, 8.000225811280368e-01, 1.383276061021405e-01,
            1.648117901013778e-01, -5.076930665870906e-01, 2.008843851797360e-01,
            2.289847857525782e-01, -9.462454193863400e-01, 7.000525056015877e-02,
            2.413326601845606e-01, 2.562094364546668e-01, 1.805943476814126e-01,
            3.244129251598891e-01, 9.815797807964038e-01, 3.669707979316125e-02,
            4.639944974152491e-01, 5.789694673013793e-01, 1.560859171904400e-01,
            4.795655397342558e-01, -1.795809740683987e-01, 2.029010677239986e-01,
            5.034250302130044e-01, -7.544476347964910e-01, 1.336407358940195e-01,
            6.348443155921265e-01, 8.760006464754001e-01, 8.606581576391330e-02,
            6.987339962580051e-01, -9.595571077523438e-01, 4.226674647754744e-02,
            7.151716310198851e-01, 1.863833474025069e-01, 1.456054555637575e-01,
            7.606746138826611e-01, -4.797962173343035e-01, 1.341465202538838e-01,
            7.630389610522654e-01, 4.519651830370793e-01, 4.323794116684067e-02,
            8.685236892209494e-01, 6.756459657106383e-01, 7.822899155683208e-02,
            8.694522415973330e-01, 9.761961093345928e-01, 2.099677952515304e-02,
            8.920718007989080e-01, -8.096447739678093e-01, 6.009039847791869e-02,
            9.192734438999380e-01, -1.159789159156424e-01, 9.186688636374692e-02,
            9.717518222429252e-01, -9.683214017531246e-01, 9.597984117068133e-03,
            9.720740612950027e-01, 3.529770957215327e-01, 4.407397330060381e-02,
            9.844256804341962e-01, 8.630433434831161e-01, 1.749593663841038e-02,
            9.897035809317545e-01, -5.425907314742811e-01, 2.692004637463620e-02
        };

        int order = square_minimal_rule_order(degree);
        double[] xw_copy = typeMethods.r8mat_copy_new(3, order, xw);

        return xw_copy;
    }
}