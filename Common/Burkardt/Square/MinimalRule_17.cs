using Burkardt.Types;

namespace Burkardt.Square;

public static partial class MinimalRule
{
    public static double[] smr17()

        //****************************************************************************80
        //
        //  Purpose:
        //
        //    SMR17 returns the SMR rule of degree 17.
        //
        //  Discussion:
        //
        //    DEGREE: 17
        //    SYMMETRY (X,Y), (-X,-Y)
        //    POINTS CARDINALITY: 54
        //    NORM INF MOMS. RESIDUAL: 4.44089e-16
        //    SUM NEGATIVE WEIGHTS: 0.00000e+00,
        //
        //  Licensing:
        //
        //    This code is distributed under the GNU LGPL license.
        //
        //  Modified:
        //
        //    21 February 2018
        //
        //  Author:
        //
        //    Original MATLAB version by Mattia Festa, Alvise Sommariva,
        //    C++ version by John Burkardt.
        //
        //  Reference:
        //
        //    Mattia Festa, Alvise Sommariva,
        //    Computing almost minimal formulas on the square,
        //    Journal of Computational and Applied Mathematics,
        //    Volume 17, Number 236, November 2012, pages 4296-4302.
        //
        //  Parameters:
        //
        //    Output, double *SMR17[3*54], the requested rule.
        //
    {
        const int degree = 17;
        double[] xw =
        {
            -9.863407162001064e-01, -5.350413962053188e-01, 2.305601467067279e-02,
            -9.797917920771685e-01, 9.250929106098536e-02, 3.240673241115238e-02,
            -9.759748695590249e-01, -9.216725954273451e-01, 1.270290274356204e-02,
            -9.751604610540874e-01, 8.226615823534071e-01, 6.967658416756498e-03,
            -9.655463590660567e-01, 5.873038194012039e-01, 3.379494459982002e-02,
            -9.580417051272648e-01, 9.392146008421756e-01, 1.490471492599059e-02,
            -8.990410418369936e-01, -2.442899840300571e-01, 8.052033202871829e-02,
            -8.929777462525665e-01, -7.628113086068719e-01, 5.184525239733102e-02,
            -8.684155248367631e-01, -9.940332573157988e-01, 8.888523934900541e-03,
            -8.543834155553983e-01, 3.348609125819369e-01, 8.942431131283363e-02,
            -8.198994002699886e-01, 7.861039744617548e-01, 6.602369125585303e-02,
            -7.927874398654909e-01, 9.867131971602722e-01, 1.519282623398942e-02,
            -7.313489231885142e-01, -5.375736491397500e-01, 1.043702032541429e-01,
            -7.090784726108733e-01, -9.201347632293920e-01, 4.542324896856204e-02,
            -6.903443278598889e-01, 8.463704695540367e-03, 1.345081852973794e-01,
            -6.159136297254387e-01, 5.598744500532884e-01, 1.235292068763380e-01,
            -5.503655196818333e-01, 9.111946838818689e-01, 6.486019261315923e-02,
            -5.088888961572688e-01, -7.826367523208496e-01, 8.485070415264370e-02,
            -4.701395263110675e-01, -3.185012886935781e-01, 1.454492206755823e-01,
            -3.956137656607415e-01, 2.488545706442738e-01, 1.612339647041861e-01,
            -3.787399827823459e-01, -9.766193765657439e-01, 3.251051105156653e-02,
            -2.831429683388207e-01, 7.382031830574145e-01, 1.224068303196167e-01,
            -2.468625326731463e-01, -6.309764352559230e-01, 1.169672902517008e-01,
            -2.225539938942038e-01, 9.838126768040562e-01, 2.855916848841619e-02,
            -1.626641413140420e-01, -1.008646063203129e-01, 1.626132038726945e-01,
            -6.874965210282233e-02, -8.853346747431012e-01, 8.682936644584309e-02,
            -5.847903009448556e-02, 4.510735833781594e-01, 1.501607980965882e-01,
            5.847903009448556e-02, -4.510735833781594e-01, 1.501607980965882e-01,
            6.874965210282233e-02, 8.853346747431012e-01, 8.682936644584309e-02,
            1.626641413140420e-01, 1.008646063203129e-01, 1.626132038726945e-01,
            2.225539938942038e-01, -9.838126768040562e-01, 2.855916848841619e-02,
            2.468625326731463e-01, 6.309764352559230e-01, 1.169672902517008e-01,
            2.831429683388207e-01, -7.382031830574145e-01, 1.224068303196167e-01,
            3.787399827823459e-01, 9.766193765657439e-01, 3.251051105156653e-02,
            3.956137656607415e-01, -2.488545706442738e-01, 1.612339647041861e-01,
            4.701395263110675e-01, 3.185012886935781e-01, 1.454492206755823e-01,
            5.088888961572688e-01, 7.826367523208496e-01, 8.485070415264370e-02,
            5.503655196818333e-01, -9.111946838818689e-01, 6.486019261315923e-02,
            6.159136297254387e-01, -5.598744500532884e-01, 1.235292068763380e-01,
            6.903443278598889e-01, -8.463704695540367e-03, 1.345081852973794e-01,
            7.090784726108733e-01, 9.201347632293920e-01, 4.542324896856204e-02,
            7.313489231885142e-01, 5.375736491397500e-01, 1.043702032541429e-01,
            7.927874398654909e-01, -9.867131971602722e-01, 1.519282623398942e-02,
            8.198994002699886e-01, -7.861039744617548e-01, 6.602369125585303e-02,
            8.543834155553983e-01, -3.348609125819369e-01, 8.942431131283363e-02,
            8.684155248367631e-01, 9.940332573157988e-01, 8.888523934900541e-03,
            8.929777462525665e-01, 7.628113086068719e-01, 5.184525239733102e-02,
            8.990410418369936e-01, 2.442899840300571e-01, 8.052033202871829e-02,
            9.580417051272648e-01, -9.392146008421756e-01, 1.490471492599059e-02,
            9.655463590660567e-01, -5.873038194012039e-01, 3.379494459982002e-02,
            9.751604610540874e-01, -8.226615823534071e-01, 6.967658416756498e-03,
            9.759748695590249e-01, 9.216725954273451e-01, 1.270290274356204e-02,
            9.797917920771685e-01, -9.250929106098536e-02, 3.240673241115238e-02,
            9.863407162001064e-01, 5.350413962053188e-01, 2.305601467067279e-02
        };

        int order = square_minimal_rule_order(degree);
        double[] xw_copy = typeMethods.r8mat_copy_new(3, order, xw);

        return xw_copy;
    }
}