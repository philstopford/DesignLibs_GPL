using Burkardt.Types;

namespace Burkardt.Square;

public static partial class MinimalRule
{
    public static double[] smr18()

        //****************************************************************************80
        //
        //  Purpose:
        //
        //    SMR18 returns the SMR rule of degree 18.
        //
        //  Discussion:
        //
        //    DEGREE: 18
        //    POINTS CARDINALITY: 64
        //    NORM INF MOMS. RESIDUAL: 1.80411e-16
        //    SUM NEGATIVE WEIGHTS: 0.00000e+00,
        //
        //  Licensing:
        //
        //    This code is distributed under the GNU LGPL license.
        //
        //  Modified:
        //
        //    21 February 2018
        //
        //  Author:
        //
        //    Original MATLAB version by Mattia Festa, Alvise Sommariva,
        //    C++ version by John Burkardt.
        //
        //  Reference:
        //
        //    Mattia Festa, Alvise Sommariva,
        //    Computing almost minimal formulas on the square,
        //    Journal of Computational and Applied Mathematics,
        //    Volume 17, Number 236, November 2012, pages 4296-4302.
        //
        //  Parameters:
        //
        //    Output, double *SMR18[3*64], the requested rule.
        //
    {
        const int degree = 18;
        double[] xw =
        {
            -9.901134796801783e-01, -3.636920739279686e-01, 1.924401162821098e-02,
            -9.813479194657442e-01, 2.269728889226950e-01, 2.377081803411145e-02,
            -9.751246202174101e-01, -8.087895536063188e-01, 1.824571677716675e-02,
            -9.741192020631542e-01, 8.966914512186399e-01, 1.040325999881736e-02,
            -9.699879010686473e-01, -9.814171856874379e-01, 5.169228082043371e-03,
            -9.695988425630034e-01, 6.372691271564769e-01, 2.701864190192290e-02,
            -9.502627815202467e-01, 9.663374399441544e-01, 6.832430188474440e-03,
            -9.197723058789439e-01, -5.864804338113919e-02, 5.855723621166473e-02,
            -9.059247381128510e-01, -5.898828597989898e-01, 5.297590163131558e-02,
            -8.627599153540467e-01, 4.164987829940056e-01, 7.111515467482395e-02,
            -8.569855990839045e-01, -9.267827643653366e-01, 2.894383892650155e-02,
            -8.389143776305836e-01, 8.004661957859885e-01, 5.373522067458378e-02,
            -8.065675356071547e-01, 9.834437446052690e-01, 1.315188692146605e-02,
            -7.872448206722253e-01, -2.985727024319632e-01, 8.409595266673971e-02,
            -7.325897102338846e-01, -7.627707340005139e-01, 6.493193699070636e-02,
            -7.108608115543918e-01, 1.482798927069730e-01, 1.059543276308938e-01,
            -6.620192350608188e-01, -9.914865774170796e-01, 1.356692677046532e-02,
            -6.334849400427111e-01, 6.037434357654228e-01, 1.051942339342666e-01,
            -6.014705998319453e-01, 9.143204709310846e-01, 5.210486977766542e-02,
            -5.892324845704049e-01, -5.045342974742788e-01, 9.788981223530169e-02,
            -5.131040457735190e-01, -9.095715109599031e-02, 1.108235515488634e-01,
            -5.033556139567553e-01, -8.956709590819707e-01, 5.541443510056418e-02,
            -3.947567656009430e-01, 3.383853875972697e-01, 1.469566677471172e-01,
            -3.365255254825216e-01, -6.932064968553141e-01, 9.848736935036356e-02,
            -3.344750516678310e-01, 9.866136919798809e-01, 2.170786884754973e-02,
            -3.310287403968845e-01, 7.731192382826196e-01, 1.015778188232984e-01,
            -2.999505641193486e-01, -2.928443015341402e-01, 1.107816184233573e-01,
            -2.331455368936777e-01, -9.731854050766667e-01, 2.884073562303302e-02,
            -1.116980244718904e-01, 4.992438237750351e-02, 1.612001429698854e-01,
            -6.575627688742440e-02, 5.455174655246902e-01, 1.390613750634900e-01,
            -6.089043840299364e-02, -8.562318836763884e-01, 6.853830062046717e-02,
            -4.781118177875937e-02, -4.996330916388668e-01, 1.194580692354339e-01,
            -2.644564050493325e-02, 9.165721602454180e-01, 6.685724630082367e-02,
            1.924944168163869e-01, -2.367466035142029e-01, 1.491161554688392e-01,
            1.951330272152753e-01, -7.328036825494620e-01, 8.630902364197904e-02,
            2.028158693449157e-01, -9.703380537473529e-01, 3.364243858164141e-02,
            2.092663468167508e-01, 2.662322825395520e-01, 1.486647112920279e-01,
            2.283553896503115e-01, 7.496185156938090e-01, 1.027379035896721e-01,
            2.876554348315164e-01, 9.873845509936813e-01, 2.192507210698709e-02,
            4.237159887642933e-01, -5.535582535086475e-01, 1.058102193186085e-01,
            4.581157947253051e-01, 5.130944233380290e-01, 1.090905648997083e-01,
            4.752280776399702e-01, -8.857999997554080e-01, 6.346475038588688e-02,
            4.831508023294471e-01, -2.549857293827913e-02, 1.337777655566684e-01,
            5.057868104561423e-01, 8.896750734704260e-01, 6.079360942822091e-02,
            6.099162517568020e-01, -3.853032051834505e-01, 6.436419858280257e-02,
            6.559598836045895e-01, 2.795821152702244e-01, 8.177939511493874e-02,
            6.565622107706015e-01, -9.883582556647157e-01, 1.640381218907065e-02,
            6.956126158721206e-01, 6.950821057395169e-01, 7.746885102883669e-02,
            7.094177605066919e-01, -7.370072009566638e-01, 7.788188331156506e-02,
            7.290386435476074e-01, 9.703386432783726e-01, 2.313579562579107e-02,
            7.557526341619506e-01, -2.941608525026456e-01, 7.412112987017343e-02,
            7.912367791054172e-01, 8.744914899411797e-02, 6.420122545616397e-02,
            8.543844628271234e-01, -9.182475827792237e-01, 3.336594260262386e-02,
            8.645615995455240e-01, 4.552151496141779e-01, 6.553880387109420e-02,
            8.705823452020542e-01, 8.420186142289366e-01, 3.949607694089933e-02,
            8.978579920125014e-01, -5.603807009892569e-01, 5.906741413770155e-02,
            9.236747719664095e-01, -1.092483343302797e-01, 5.348329279696051e-02,
            9.440144649649265e-01, 9.743199890031753e-01, 8.946275110809443e-03,
            9.689413373175574e-01, 6.453835143088201e-01, 2.577199176900479e-02,
            9.716342103019509e-01, -9.824772013181601e-01, 5.332369479915357e-03,
            9.729481716901303e-01, -7.936277261963781e-01, 2.070804573643469e-02,
            9.758025156447697e-01, 2.267876624457436e-01, 2.981298882062168e-02,
            9.939173935792275e-01, 8.841354641450845e-01, 5.745299494229030e-03,
            9.953701290021145e-01, -3.661129988733890e-01, 1.543638847873499e-02
        };

        int order = square_minimal_rule_order(degree);
        double[] xw_copy = typeMethods.r8mat_copy_new(3, order, xw);

        return xw_copy;
    }
}