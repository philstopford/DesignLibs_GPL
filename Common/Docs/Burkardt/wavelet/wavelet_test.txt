09 May 2012 04:32:56 PM

WAVELET_PRB
  C++ version
  Test the WAVELET library.

TEST01
  DAUB2_TRANSFORM computes the DAUB2 transform of a vector.
  DAUB2_TRANSFORM_INVERSE inverts it.

   i      U          D2(U)    D2inv(D2(U))

   0    0.218418     1.63977    0.218418
   1    0.956318   0.0676837    0.956318
   2    0.829509    0.607044    0.829509
   3    0.561695   -0.270838    0.561695
   4    0.415307   -0.108234    0.415307
   5   0.0661187   0.0569456   0.0661187
   6    0.257578   0.0832643    0.257578
   7    0.109957    0.178427    0.109957
   8    0.043829   -0.521774    0.043829
   9    0.633966    0.189373    0.633966
  10   0.0617272    0.246913   0.0617272
  11    0.449539    0.104384    0.449539
  12    0.401306    -0.41729    0.401306
  13    0.754673   -0.274224    0.754673
  14    0.797287   -0.249868    0.797287
  15  0.00183837    0.562467  0.00183837

   i      U          D2(U)    D2inv(D2(U))

   0           1     2.82843           1
   1           1           0           1
   2           1           0           1
   3           1           0           1
   4           1           0           1
   5           1           0           1
   6           1           0           1
   7           1           0           1

   i      U          D2(U)    D2inv(D2(U))

   0           1          34           1
   1           2         -16           2
   2           3    -5.65685           3
   3           4    -5.65685           4
   4           5          -2           5
   5           6          -2           6
   6           7          -2           7
   7           8          -2           8
   8           9   -0.707107           9
   9          10   -0.707107          10
  10          11   -0.707107          11
  11          12   -0.707107          12
  12          13   -0.707107          13
  13          14   -0.707107          14
  14          15   -0.707107          15
  15          16   -0.707107          16

   i      U          D2(U)    D2inv(D2(U))

   0          25     21.2132          25
   1          16     16.9706          16
   2           9          14           9
   3           4          -2           4
   4           1     6.36396           1
   5           0     3.53553  -4.71028e-16
   6           1    0.707107           1
   7           4    -2.12132           4

TEST02
  DAUB4_TRANSFORM computes the DAUB4 transform of a vector.
  DAUB4_TRANSFORM_INVERSE inverts it.

   i      U          D4(U)    D4inv(D4(U))

   0    0.218418    0.981575    0.218418
   1    0.956318     1.33741    0.956318
   2    0.829509  -0.0194229    0.829509
   3    0.561695    0.673016    0.561695
   4    0.415307   -0.165072    0.415307
   5   0.0661187    0.160893   0.0661187
   6    0.257578    0.534053    0.257578
   7    0.109957    0.191162    0.109957
   8    0.043829    0.180002    0.043829
   9    0.633966   0.0822313    0.633966
  10   0.0617272   0.0937982   0.0617272
  11    0.449539   -0.327497    0.449539
  12    0.401306   -0.313246    0.401306
  13    0.754673    -0.13753    0.754673
  14    0.797287    0.444967    0.797287
  15  0.00183837   -0.382744  0.00183837

   i      U          D4(U)    D4inv(D4(U))

   0           1           2           1
   1           1           2           1
   2           1  3.33067e-16           1
   3           1  3.33067e-16           1
   4           1  2.22045e-16           1
   5           1  2.22045e-16           1
   6           1  2.22045e-16           1
   7           1  2.22045e-16           1

   i      U          D4(U)    D4inv(D4(U))

   0           1     15.8659           1
   1           2     32.2173           2
   2           3     1.81173           3
   3           4    -10.5744           4
   4           5  1.77636e-15           5
   5           6           0           6
   6           7    0.732051           7
   7           8    -7.66025           8
   8           9  6.66134e-16           9
   9          10  1.33227e-15          10
  10          11  1.77636e-15          11
  11          12  1.77636e-15          12
  12          13  2.66454e-15          13
  13          14  3.55271e-15          14
  14          15  3.55271e-15          15
  15          16    -5.65685          16

   i      U          D4(U)    D4inv(D4(U))

   0          25     18.7321          25
   1          16     11.2679          16
   2           9    -8.66025           9
   3           4     17.0526           4
   4           1    -1.22474           1
   5           0    -1.22474  2.38698e-15
   6           1    -1.22474           1
   7           4     12.1595           4

TEST03
  DAUB6_TRANSFORM computes the DAUB6 transform of a vector.
  DAUB6_TRANSFORM_INVERSE inverts it.

   i      U          D6(U)    D6inv(D6(U))

   0    0.218418    0.829517    0.218418
   1    0.956318     1.48946    0.956318
   2    0.829509     0.40036    0.829509
   3    0.561695    0.254994    0.561695
   4    0.415307    0.278203    0.415307
   5   0.0661187     0.61731   0.0661187
   6    0.257578    0.417419    0.257578
   7    0.109957   -0.292574    0.109957
   8    0.043829   0.0322111    0.043829
   9    0.633966    0.161993    0.633966
  10   0.0617272     -0.2406   0.0617272
  11    0.449539   -0.378737    0.449539
  12    0.401306   -0.086603    0.401306
  13    0.754673    0.282058    0.754673
  14    0.797287    -0.17177    0.797287
  15  0.00183837   0.0414291  0.00183837

   i      U          D6(U)    D6inv(D6(U))

   0           1           2           1
   1           1           2           1
   2           1  3.88578e-16           1
   3           1  3.88578e-16           1
   4           1  1.66533e-16           1
   5           1  1.66533e-16           1
   6           1  1.66533e-16           1
   7           1  1.66533e-16           1

   i      U          D6(U)    D6inv(D6(U))

   0           1     22.6778           1
   1           2     25.4054           2
   2           3    -11.0375           3
   3           4     8.07873           4
   4           5  2.66454e-15           5
   5           6     2.11018           6
   6           7    -8.81797           7
   7           8     2.38323           8
   8           9  8.88178e-16           9
   9          10  1.33227e-15          10
  10          11  8.88178e-16          11
  11          12  2.66454e-15          12
  12          13  2.66454e-15          13
  13          14  8.88178e-16          14
  14          15    -7.58754          15
  15          16     1.93068          16

   i      U          D6(U)    D6inv(D6(U))

   0          25     9.52642          25
   1          16     20.4736          16
   2           9     13.7048           9
   3           4    -10.5832           4
   4           1  7.77156e-16           1
   5           0  2.22045e-16  1.55431e-15
   6           1     12.9103           1
   7           4    -4.42498           4

TEST04
  DAUB8_TRANSFORM computes the DAUB8 transform of a vector.
  DAUB8_TRANSFORM_INVERSE inverts it.

   i      U          D8(U)    D8inv(D8(U))

   0    0.218418    0.835752    0.218418
   1    0.956318     1.48323    0.956318
   2    0.829509    0.423785    0.829509
   3    0.561695  -0.00882393    0.561695
   4    0.415307    0.503584    0.415307
   5   0.0661187    0.597359   0.0661187
   6    0.257578   -0.304003    0.257578
   7    0.109957    0.297823    0.109957
   8    0.043829    0.202341    0.043829
   9    0.633966   -0.193384    0.633966
  10   0.0617272   -0.438687   0.0617272
  11    0.449539  -0.0587404    0.449539
  12    0.401306    0.146847    0.401306
  13    0.754673    0.050441    0.754673
  14    0.797287       -0.15    0.797287
  15  0.00183837   0.0811643  0.00183837

   i      U          D8(U)    D8inv(D8(U))

   0           1           2           1
   1           1           2           1
   2           1  2.77556e-16           1
   3           1  2.77556e-16           1
   4           1  1.66533e-16           1
   5           1  1.66533e-16           1
   6           1  1.66533e-16           1
   7           1  1.66533e-16           1

   i      U          D8(U)    D8inv(D8(U))

   0           1     29.6611           1
   1           2     18.4222           2
   2           3     10.2278           3
   3           4    -6.63501           4
   4           5     3.48524           5
   5           6     -6.3549           6
   6           7     2.62045           7
   7           8    -0.67766           8
   8           9  8.88178e-16           9
   9          10  8.88178e-16          10
  10          11  1.33227e-15          11
  11          12  1.77636e-15          12
  12          13  2.66454e-15          13
  13          14     -7.7515          14
  14          15     2.79033          15
  15          16   -0.695687          16

   i      U          D8(U)    D8inv(D8(U))

   0          25     2.80398          25
   1          16      27.196          16
   2           9    -8.05732           9
   3           4     5.47456           4
   4           1  4.44089e-16           1
   5           0     11.4375  -3.13638e-15
   6           1     -4.5132           1
   7           4     1.56093           4

TEST05
  DAUB10_TRANSFORM computes the DAUB10 transform of a vector.
  DAUB10_TRANSFORM_INVERSE inverts it.

   i      U          D10(U)    D10inv(D10(U))

   0    0.218418     1.00108    0.218418
   1    0.956318      1.3179    0.956318
   2    0.829509   -0.372892    0.829509
   3    0.561695    0.420012    0.561695
   4    0.415307    0.695795    0.415307
   5   0.0661187   -0.234353   0.0661187
   6    0.257578    0.187279    0.257578
   7    0.109957    0.304371    0.109957
   8    0.043829   -0.152381    0.043829
   9    0.633966    -0.46737    0.633966
  10   0.0617272  -0.0512913   0.0617272
  11    0.449539   0.0497884    0.449539
  12    0.401306    0.230593    0.401306
  13    0.754673   -0.331928    0.754673
  14    0.797287    0.178558    0.797287
  15  0.00183837    0.184013  0.00183837

   i      U          D10(U)    D10inv(D10(U))

   0           1           2           1
   1           1           2           1
   2           1  -2.77556e-17           1
   3           1  -2.77556e-17           1
   4           1  -1.11022e-16           1
   5           1  -1.11022e-16           1
   6           1  -1.11022e-16           1
   7           1  -1.11022e-16           1

   i      U          D10(U)    D10inv(D10(U))

   0           1     33.9013           1
   1           2      14.182           2
   2           3    0.894892           3
   3           4     7.74418           4
   4           5    -2.27922           5
   5           6    0.662131           6
   6           7   -0.514092           7
   7           8     4.69894           8
   8           9           0           9
   9          10  -8.88178e-16          10
  10          11  -8.88178e-16          11
  11          12  -8.88178e-16          12
  12          13    -7.09963          13
  13          14     2.27446          14
  14          15    -1.08634          15
  15          16    0.254664          16

   i      U          D10(U)    D10inv(D10(U))

   0          25    0.641363          25
   1          16     29.3586          16
   2           9    -4.93736           9
   3           4    -2.70264           4
   4           1     9.66127           1
   5           0    -2.32314  -1.94636e-15
   6           1     1.70985           1
   7           4   -0.562699           4

TEST06
  DAUB12_TRANSFORM computes the DAUB12 transform of a vector.
  DAUB12_TRANSFORM_INVERSE inverts it.

   i      U          D12(U)    D12inv(D12(U))

   0    0.218418     1.24918    0.218418
   1    0.956318      1.0698    0.956318
   2    0.829509    0.246888    0.829509
   3    0.561695    -0.56192    0.561695
   4    0.415307   -0.114586    0.415307
   5   0.0661187  -0.0118115   0.0661187
   6    0.257578   0.0983298    0.257578
   7    0.109957    0.662726    0.109957
   8    0.043829   -0.472153    0.043829
   9    0.633966  -0.0710196    0.633966
  10   0.0617272  -0.0102465   0.0617272
  11    0.449539    0.347122    0.449539
  12    0.401306   -0.456249    0.401306
  13    0.754673    0.269285    0.754673
  14    0.797287    0.125081    0.797287
  15  0.00183837  -0.0918377  0.00183837

   i      U          D12(U)    D12inv(D12(U))

   0           1           2           1
   1           1           2           1
   2           1  -1.11022e-16           1
   3           1  -1.11022e-16           1
   4           1  -5.55112e-17           1
   5           1  -5.55112e-17           1
   6           1  -5.55112e-17           1
   7           1  -5.55112e-17           1

   i      U          D12(U)    D12inv(D12(U))

   0           1     33.8275           1
   1           2     14.2558           2
   2           3     2.15038           3
   3           4     8.46204           4
   4           5    -2.09779           5
   5           6    0.771833           6
   6           7     4.98077           7
   7           8      1.8663           8
   8           9  2.22045e-16           9
   9          10  4.44089e-16          10
  10          11  -8.88178e-16          11
  11          12    -6.12933          12
  12          13    0.844807          13
  13          14   -0.699159          14
  14          15    0.420501          15
  15          16  -0.0936729          16

   i      U          D12(U)    D12inv(D12(U))

   0          25      3.4826          25
   1          16     26.5174          16
   2           9     3.11035           9
   3           4    -14.2867           4
   4           1    0.699327           1
   5           0     0.31267  -3.86397e-14
   6           1   -0.645281           1
   7           4     8.11856           4

TEST07
  DAUB14_TRANSFORM computes the DAUB14 transform of a vector.
  DAUB14_TRANSFORM_INVERSE inverts it.

   i      U          D14(U)    D14inv(D14(U))

   0    0.218418     1.46685    0.218418
   1    0.956318    0.852126    0.956318
   2    0.829509   -0.524899    0.829509
   3    0.561695  -0.0295381    0.561695
   4    0.415307   -0.233305    0.415307
   5   0.0661187  -0.0830166   0.0661187
   6    0.257578    0.485052    0.257578
   7    0.109957   0.0354114    0.109957
   8    0.043829   -0.113321    0.043829
   9    0.633966  -0.0359634    0.633966
  10   0.0617272    0.399366   0.0617272
  11    0.449539   -0.500866    0.449539
  12    0.401306    0.310094    0.401306
  13    0.754673   0.0632657    0.754673
  14    0.797287  -0.0132877    0.797287
  15  0.00183837   -0.469305  0.00183837

   i      U          D14(U)    D14inv(D14(U))

   0           1           2           1
   1           1           2           1
   2           1  -4.16334e-17           1
   3           1  -4.16334e-17           1
   4           1           0           1
   5           1           0           1
   6           1           0           1
   7           1           0           1

   i      U          D14(U)    D14inv(D14(U))

   0           1     29.6608           1
   1           2     18.4225           2
   2           3     12.9282           3
   3           4    -3.92074           4
   4           5     2.35591           5
   5           6     4.01761           6
   6           7     5.27259           7
   7           8    -4.21629           8
   8           9  4.44089e-16           9
   9          10  8.88178e-16          10
  10          11      -5.099          11
  11          12   -0.949399          12
  12          13    0.332684          13
  13          14    0.183829          14
  14          15   -0.159457          15
  15          16   0.0344857          16

   i      U          D14(U)    D14inv(D14(U))

   0          25     10.1637          25
   1          16     19.8363          16
   2           9    -19.7295           9
   3           4     7.10171           4
   4           1    -1.82022           1
   5           0    0.134944  5.07754e-15
   6           1     6.58204           1
   7           4     3.58852           4

TEST08
  DAUB16_TRANSFORM computes the DAUB16 transform of a vector.
  DAUB16_TRANSFORM_INVERSE inverts it.

   i      U          D16(U)    D16inv(D16(U))

   0    0.218418     1.55726    0.218418
   1    0.956318    0.761717    0.956318
   2    0.829509   -0.305017    0.829509
   3    0.561695   -0.295748    0.561695
   4    0.415307   -0.234641    0.415307
   5   0.0661187    0.202055   0.0661187
   6    0.257578    0.190974    0.257578
   7    0.109957   -0.417301    0.109957
   8    0.043829  -0.0356973    0.043829
   9    0.633966    0.396932    0.633966
  10   0.0617272   -0.467455   0.0617272
  11    0.449539    0.280786    0.449539
  12    0.401306   0.0335736    0.401306
  13    0.754673   0.0624597    0.754673
  14    0.797287   -0.464933    0.797287
  15  0.00183837   -0.165684  0.00183837

   i      U          D16(U)    D16inv(D16(U))

   0           1           2           1
   1           1           2           1
   2           1  -8.32667e-17           1
   3           1  -8.32667e-17           1
   4           1  -8.32667e-17           1
   5           1  -8.32667e-17           1
   6           1  -8.32667e-17           1
   7           1  -8.32667e-17           1

   i      U          D16(U)    D16inv(D16(U))

   0           1     23.2267           1
   1           2     24.8566           2
   2           3    -7.92221           3
   3           4     12.3873           4
   4           5     2.23354           5
   5           6     7.48737           6
   6           7    -4.91485           7
   7           8     3.18577           8
   8           9  -4.44089e-16           9
   9          10    -4.13529          10
  10          11    -2.69088          11
  11          12     1.60011          12
  12          13   -0.452291          13
  13          14   -0.024788          14
  14          15    0.058971          15
  15          16  -0.0126868          16

   i      U          D16(U)    D16inv(D16(U))

   0          25     18.3697          25
   1          16     11.6303          16
   2           9     7.83642           9
   3           4    -19.6433           4
   4           1     1.43521           1
   5           0     4.83116  -2.3332e-15
   6           1     6.01662           1
   7           4    -3.79771           4

TEST09
  DAUB18_TRANSFORM computes the DAUB18 transform of a vector.
  DAUB18_TRANSFORM_INVERSE inverts it.

   i      U          D18(U)    D18inv(D18(U))

   0    0.218418     1.48129    0.218418
   1    0.956318    0.837691    0.956318
   2    0.829509   0.0263568    0.829509
   3    0.561695   -0.473821    0.561695
   4    0.415307   -0.113519    0.415307
   5   0.0661187    0.315342   0.0661187
   6    0.257578   -0.519205    0.257578
   7    0.109957   -0.355648    0.109957
   8    0.043829    0.355494    0.043829
   9    0.633966   -0.372941    0.633966
  10   0.0617272    0.185055   0.0617272
  11    0.449539   0.0541114    0.449539
  12    0.401306    0.111215    0.401306
  13    0.754673   -0.452096    0.754673
  14    0.797287   -0.218334    0.797287
  15  0.00183837  -0.0225224  0.00183837

   i      U          D18(U)    D18inv(D18(U))

   0           1           2           1
   1           1           2           1
   2           1  -1.31839e-16           1
   3           1  -1.31839e-16           1
   4           1  -1.04083e-16           1
   5           1  -1.04083e-16           1
   6           1  -1.04083e-16           1
   7           1  -1.04083e-16           1

   i      U          D18(U)    D18inv(D18(U))

   0           1     17.1835           1
   1           2     30.8998           2
   2           3     6.92421           3
   3           4    -8.40111           4
   4           5     8.15447           5
   5           6    -4.09087           6
   6           7     2.68896           7
   7           8    0.390857           8
   8           9    -3.29211           9
   9          10    -4.13155          10
  10          11     2.69199          11
  11          12    -1.23411          12
  12          13    0.339623          13
  13          14   -0.014148          14
  14          15  -0.0212152          15
  15          16  0.00466097          16

   i      U          D18(U)    D18inv(D18(U))

   0          25     25.4016          25
   1          16     4.59839          16
   2           9    -14.0681           9
   3           4     5.15378           4
   4           1     2.98991           1
   5           0     7.95934  -6.20272e-15
   6           1    -5.09293           1
   7           4     2.62896           4

TEST10
  DAUB20_TRANSFORM computes the DAUB20 transform of a vector.
  DAUB20_TRANSFORM_INVERSE inverts it.

   i      U          D20(U)    D20inv(D20(U))

   0    0.218418      1.2714    0.218418
   1    0.956318     1.04758    0.956318
   2    0.829509   -0.467113    0.829509
   3    0.561695    0.316911    0.561695
   4    0.415307    0.369923    0.415307
   5   0.0661187    -0.51142   0.0661187
   6    0.257578   -0.440258    0.257578
   7    0.109957   -0.386068    0.109957
   8    0.043829   -0.241751    0.043829
   9    0.633966   0.0437434    0.633966
  10   0.0617272    0.122044   0.0617272
  11    0.449539    0.118895    0.449539
  12    0.401306   -0.418488    0.401306
  13    0.754673   -0.269449    0.754673
  14    0.797287  -0.00849101    0.797287
  15  0.00183837    0.293478  0.00183837

   i      U          D20(U)    D20inv(D20(U))

   0           1           2           1
   1           1           2           1
   2           1  -5.55112e-17           1
   3           1  -5.55112e-17           1
   4           1  -6.245e-17           1
   5           1  -6.245e-17           1
   6           1  -6.245e-17           1
   7           1  -6.245e-17           1

   i      U          D20(U)    D20inv(D20(U))

   0           1     13.9608           1
   1           2     34.1225           2
   2           3    -5.46526           3
   3           4    -1.42568           4
   4           5    -2.06512           5
   5           6      0.9615           6
   6           7    -0.92803           7
   7           8     7.09113           8
   8           9    -5.16423           9
   9          10     3.33207          10
  10          11    -1.84098          11
  11          12    0.790241          12
  12          13   -0.212482          13
  13          14   0.0169534          14
  14          15  0.00740059          15
  15          16    -2.58582          16

   i      U          D20(U)    D20inv(D20(U))

   0          25     29.0224          25
   1          16    0.977583          16
   2           9    0.155714           9
   3           4    -4.64649           4
   4           1     9.37956           1
   5           0    -5.54314  -8.83787e-16
   6           1     3.22468           1
   7           4     1.42418           4

WAVELET_PRB
  Normal end of execution.

09 May 2012 04:32:56 PM
