<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:DynamicAero2.Styles"
                    xmlns:eto="clr-namespace:Eto.Wpf.Forms.Controls;assembly=Eto.Wpf"                                        
                    >
    <Style x:Key="{x:Type RadioButton}" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}"/>
        <Setter Property="Background" Value="{DynamicResource RadioButton.Static.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource RadioButton.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True" Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="radioButtonBorder" 
                            Margin="1,1,2,1" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            CornerRadius="100">
                            <Grid x:Name="markGrid" Margin="2">
                                <Ellipse x:Name="optionMark" Opacity="0" MinWidth="6" MinHeight="6" Fill="{DynamicResource RadioButton.Static.Glyph}"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" 
                            RecognizesAccessKey="True" 
                            Grid.Column="1" 
                            Margin="{TemplateBinding Padding}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                            Focusable="False"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{DynamicResource OptionMarkFocusVisual}"/>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource RadioButton.MouseOver.Background}" TargetName="radioButtonBorder" />
                            <Setter Property="BorderBrush" Value="{DynamicResource RadioButton.MouseOver.Border}" TargetName="radioButtonBorder" />
                            <Setter Property="Fill" Value="{DynamicResource RadioButton.MouseOver.Glyph}" TargetName="optionMark" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource RadioButton.Disabled.Background}" TargetName="radioButtonBorder" />
                            <Setter Property="BorderBrush" Value="{DynamicResource RadioButton.Disabled.Border}" TargetName="radioButtonBorder" />
                            <Setter Property="Fill" Value="{DynamicResource RadioButton.Disabled.Glyph}" TargetName="optionMark" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{DynamicResource RadioButton.Pressed.Background}" TargetName="radioButtonBorder" />
                            <Setter Property="BorderBrush" Value="{DynamicResource RadioButton.Pressed.Border}" TargetName="radioButtonBorder" />
                            <Setter Property="Fill" Value="{DynamicResource RadioButton.Pressed.Glyph}" TargetName="optionMark" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" Value="1" TargetName="optionMark" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" Value="0.56" TargetName="optionMark" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type eto:RadioButtonHandler}"
       BasedOn="{StaticResource {x:Type RadioButton}}"
       TargetType="{x:Type eto:RadioButtonHandler}"/>
</ResourceDictionary>